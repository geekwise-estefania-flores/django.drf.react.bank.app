{"ast":null,"code":"import _objectSpread from \"/Users/stefi/projects/six_degrees/drf-bank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/stefi/projects/six_degrees/drf-bank/src/components/branchModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.name === \"name\") {\n        // this.setState({branchItem: e.target.value})\n        value = e.target.value;\n      }\n\n      const branchItem = _objectSpread({}, this.state.branchItem, {\n        [name]: value\n      });\n\n      console.log(\"branch: \" + branchItem);\n      this.setState({\n        branchItem\n      });\n    };\n\n    this.state = {\n      branchItem: this.props.branchItem\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n    console.log(\"Branch: \" + this.state.branchItem);\n    return React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Branch \"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Branch Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.branchItem.name,\n      onChange: this.handleChange,\n      placeholder: \"Enter Branch Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.branchItem.address,\n      onChange: this.handleChange,\n      placeholder: \"123 Fake Street 93291\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.branchItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/stefi/projects/six_degrees/drf-bank/src/components/branchModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","target","name","value","branchItem","state","console","log","setState","render","toggle","onSave","address"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      branchItem: this.props.branchItem\n    };\n  }\n  \n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.name === \"name\") {\n      // this.setState({branchItem: e.target.value})\n      value = e.target.value;\n    }\n    const branchItem = { ...this.state.branchItem, [name]: value };\n    console.log(\"branch: \" + branchItem)\n    this.setState({ branchItem });\n  };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    console.log(\"Branch: \" + this.state.branchItem)\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Branch </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"name\">Branch Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.branchItem.name}\n                onChange={this.handleChange}\n                placeholder=\"Enter Branch Name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address</Label>\n              <Input\n                type=\"text\"\n                name=\"address\"\n                value={this.state.branchItem.address}\n                onChange={this.handleChange}\n                placeholder=\"123 Fake Street 93291\"\n              />\n            </FormGroup>\n            {/* <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup> */}\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.branchItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}